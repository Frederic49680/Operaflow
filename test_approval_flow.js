// Test d'approbation de demande d'acc√®s (simulation)
async function testApprovalFlow() {
  try {
    console.log('üß™ Test du flux d\'approbation...');
    
    // D'abord, cr√©er une demande d'acc√®s
    console.log('1Ô∏è‚É£ Cr√©ation d\'une demande d\'acc√®s...');
    const createResponse = await fetch('https://operaflow-ten.vercel.app/api/auth/access-request', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        prenom: 'Test',
        nom: 'SendGrid',
        email: 'frederic.baudry@outlook.fr',
        message: 'Test d\'envoi d\'email SendGrid'
      })
    });
    
    console.log('üìä Statut cr√©ation:', createResponse.status);
    
    if (createResponse.ok) {
      const createResult = await createResponse.json();
      console.log('‚úÖ Demande cr√©√©e:', createResult);
      
      // R√©cup√©rer les demandes en attente
      console.log('\n2Ô∏è‚É£ R√©cup√©ration des demandes...');
      const requestsResponse = await fetch('https://operaflow-ten.vercel.app/api/admin/access-requests');
      
      if (requestsResponse.ok) {
        const requests = await requestsResponse.json();
        console.log('üìã Demandes trouv√©es:', requests.length);
        
        if (requests.length > 0) {
          const lastRequest = requests[requests.length - 1];
          console.log('üìù Derni√®re demande:', lastRequest);
          
          // R√©cup√©rer les r√¥les disponibles
          console.log('\n3Ô∏è‚É£ R√©cup√©ration des r√¥les...');
          const rolesResponse = await fetch('https://operaflow-ten.vercel.app/api/admin/roles');
          
          if (rolesResponse.ok) {
            const roles = await rolesResponse.json();
            console.log('üé≠ R√¥les disponibles:', roles.length);
            
            if (roles.length > 0) {
              const userRole = roles.find(r => r.code === 'USER') || roles[0];
              console.log('üë§ R√¥le s√©lectionn√©:', userRole);
              
              // Approuver la demande
              console.log('\n4Ô∏è‚É£ Approbation de la demande...');
              const approveResponse = await fetch('https://operaflow-ten.vercel.app/api/admin/approve-access-request', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  requestId: lastRequest.id,
                  roleId: userRole.id
                })
              });
              
              console.log('üìä Statut approbation:', approveResponse.status);
              
              if (approveResponse.ok) {
                const approveResult = await approveResponse.json();
                console.log('‚úÖ Approbation r√©ussie:', approveResult);
              } else {
                const error = await approveResponse.text();
                console.log('‚ùå Erreur approbation:', error);
              }
            }
          }
        }
      }
    } else {
      const error = await createResponse.text();
      console.log('‚ùå Erreur cr√©ation:', error);
    }
  } catch (error) {
    console.error('üö® Erreur:', error);
  }
}

testApprovalFlow();

